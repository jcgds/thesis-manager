# Generated by Django 3.0.2 on 2020-01-08 01:34

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Defence',
            fields=[
                ('code', models.CharField(max_length=68, primary_key=True, serialize=False)),
                ('date_time', models.DateTimeField()),
                ('grade', models.PositiveSmallIntegerField()),
                ('is_publication_mention', models.BooleanField()),
                ('is_honorific_mention', models.BooleanField()),
                ('corrections_submission_date', models.DateField(blank=True, null=True)),
                ('was_grade_loaded', models.BooleanField()),
                ('observations', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='PersonData',
            fields=[
                ('type', models.PositiveSmallIntegerField(choices=[(0, 'Profesor'), (1, 'Estudiante'), (2, 'Externo')])),
                ('id_card_number', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('last_name', models.CharField(max_length=128)),
                ('ucab_email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('email', models.EmailField(max_length=254)),
                ('primary_phone_number', models.CharField(max_length=32)),
                ('secondary_phone_number', models.CharField(blank=True, max_length=32, null=True)),
                ('observations', models.CharField(blank=True, max_length=1024, null=True)),
            ],
            options={
                'verbose_name_plural': 'Person data',
            },
        ),
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('code', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('submission_date', models.DateField()),
                ('title', models.CharField(max_length=512)),
                ('academic_tutor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='academic_tutor', to='web.PersonData')),
                ('industry_tutor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='industry_tutor', to='web.PersonData')),
                ('student1', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='student1', to='web.PersonData')),
                ('student2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='student2', to='web.PersonData')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'verbose_name_plural': 'Proposal statuses',
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='ThesisStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'verbose_name_plural': 'Thesis statuses',
            },
        ),
        migrations.CreateModel(
            name='Thesis',
            fields=[
                ('code', models.CharField(max_length=66, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=512)),
                ('NRC', models.CharField(max_length=32)),
                ('description', models.CharField(max_length=50)),
                ('thematic_category', models.CharField(max_length=50)),
                ('submission_date', models.DateField()),
                ('company_name', models.CharField(blank=True, max_length=128, null=True)),
                ('delivery_term', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.Term')),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.Proposal')),
            ],
            options={
                'verbose_name_plural': 'Thesis',
            },
        ),
        migrations.AddField(
            model_name='proposal',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='term', to='web.Term'),
        ),
        migrations.CreateModel(
            name='Jury',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmed_assistance', models.BooleanField(default=False)),
                ('is_backup_jury', models.BooleanField(default=False)),
                ('defence', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.Defence')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.PersonData')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricThesisStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True)),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.ThesisStatus')),
                ('thesis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Thesis')),
            ],
            options={
                'verbose_name_plural': 'Historic thesis statuses',
            },
        ),
        migrations.CreateModel(
            name='HistoricProposalStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Proposal')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.ProposalStatus')),
            ],
            options={
                'verbose_name_plural': 'Historic proposal statuses',
            },
        ),
        migrations.AddField(
            model_name='defence',
            name='thesis',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.Thesis'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True,
                                              validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_manager', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
